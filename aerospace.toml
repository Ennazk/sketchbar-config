# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after AeroSpace startup.
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders',
  'exec-and-forget sketchybar',
  # Launch essential apps
  'exec-and-forget open -a "Arc"',
  'exec-and-forget open -a "Visual Studio Code"',
  'exec-and-forget open -a "iTerm"',
  'exec-and-forget open -a "Discord"',
  'exec-and-forget open -a "Messenger"',
  'exec-and-forget open -a "YouTube Music"',
  # Add delay to ensure proper workspace assignment
  'exec-and-forget sleep 3 && sketchybar --reload'
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# Reduced padding for better visibility of other apps
accordion-padding = 15

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false


# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 30
    inner.vertical =   30
    outer.left =       20
    outer.bottom =     20
    outer.top =        46
    outer.right =      20

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-h = 'focus left'
    alt-j = 'focus down'
    alt-k = 'focus up'
    alt-l = 'focus right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-h = 'move left'
    alt-shift-j = 'move down'
    alt-shift-k = 'move up'
    alt-shift-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-minus = 'resize smart -50'
    alt-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    # Home row workspace bindings for one-handed switching
    alt-a = 'workspace A'  # Main work (VS Code, Terminal)
    alt-s = 'workspace S'  # Browser (Arc)
    alt-d = 'workspace D'  # Communication (Discord, Messenger)
    alt-f = 'workspace F'  # Notes (Notion)
    alt-g = 'workspace G'  # Music (YouTube Music)

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    # Move windows to home row workspaces
    alt-shift-a = 'move-node-to-workspace A'  # Main work
    alt-shift-s = 'move-node-to-workspace S'  # Browser
    alt-shift-d = 'move-node-to-workspace D'  # Communication
    alt-shift-f = 'move-node-to-workspace F'  # Notes
    alt-shift-g = 'move-node-to-workspace G'  # Music

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    # Cycle through workspaces in the correct order: A -> S -> D -> F -> G -> A...
    alt-tab = 'exec-and-forget /Users/yassir/.config/sketchybar/scripts/cycle_workspace.sh next'
    alt-shift-tab = 'exec-and-forget /Users/yassir/.config/sketchybar/scripts/cycle_workspace.sh prev'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']

# Automatic app workspace assignment
# Browser apps go to workspace S
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'  # Arc
run = 'move-node-to-workspace S'

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace S'

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace S'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace S'

# Main work apps go to workspace A
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.github.atom'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.sublimetext.4'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.apple.Terminal'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.sequelpro.SequelPro'
run = 'move-node-to-workspace A'

[[on-window-detected]]
if.app-id = 'com.sequel-ace.sequel-ace'
run = 'move-node-to-workspace A'

# Communication apps go to workspace D
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'com.facebook.archon'  # Messenger
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'  # Slack
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'  # Messages
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'  # Signal
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'  # Telegram
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'  # WhatsApp
run = 'move-node-to-workspace D'

# Notes apps go to workspace F
[[on-window-detected]]
if.app-id = 'notion.id'  # Notion
run = 'move-node-to-workspace F'

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace F'

[[on-window-detected]]
if.app-id = 'com.bear-writer.BearStaticAction'  # Bear
run = 'move-node-to-workspace F'

[[on-window-detected]]
if.app-id = 'com.obsidian.obsidian'  # Obsidian
run = 'move-node-to-workspace F'

# Music apps go to workspace G
[[on-window-detected]]
if.app-id = 'com.google.YouTubeMusic'
run = 'move-node-to-workspace G'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace G'

[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace G'

[[on-window-detected]]
if.app-id = 'com.netease.163music'
run = 'move-node-to-workspace G'

[[on-window-detected]]
if.app-id = 'com.soundcloud.desktop'
run = 'move-node-to-workspace G'

# Common floating apps (keep these floating)
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.calculator'
run = 'layout floating'

